"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/useMockApi.tsx":
/*!****************************!*\
  !*** ./lib/useMockApi.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mockApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mockApi */ \"(app-pages-browser)/./lib/mockApi.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\n\n// Mock API context to simulate backend integration\nconst useMockApi = ()=>{\n    _s();\n    const [isAuthenticated, setIsAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [currentUser, setCurrentUser] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [token, setToken] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Check for existing token in localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const storedToken = localStorage.getItem(\"atlas_token\");\n        const storedUser = localStorage.getItem(\"atlas_user\");\n        if (storedToken && storedUser) {\n            setToken(storedToken);\n            setCurrentUser(JSON.parse(storedUser));\n            setIsAuthenticated(true);\n        }\n    }, []);\n    // Authentication functions\n    const login = async (email, password)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const result = await (0,_mockApi__WEBPACK_IMPORTED_MODULE_1__.loginUser)(email, password);\n            setCurrentUser(result.user);\n            setToken(result.token);\n            setIsAuthenticated(true);\n            // Store in localStorage\n            localStorage.setItem(\"atlas_token\", result.token);\n            localStorage.setItem(\"atlas_user\", JSON.stringify(result.user));\n            return result;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const register = async (email, password, name)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const result = await (0,_mockApi__WEBPACK_IMPORTED_MODULE_1__.registerUser)(email, password, name);\n            setCurrentUser(result.user);\n            setToken(result.token);\n            setIsAuthenticated(true);\n            // Store in localStorage\n            localStorage.setItem(\"atlas_token\", result.token);\n            localStorage.setItem(\"atlas_user\", JSON.stringify(result.user));\n            return result;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const logout = ()=>{\n        setCurrentUser(null);\n        setToken(null);\n        setIsAuthenticated(false);\n        // Remove from localStorage\n        localStorage.removeItem(\"atlas_token\");\n        localStorage.removeItem(\"atlas_user\");\n    };\n    // API functions\n    const getProperties = async ()=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const properties = await (0,_mockApi__WEBPACK_IMPORTED_MODULE_1__.fetchProperties)();\n            return properties;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const getPropertyById = async (id)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const property = await (0,_mockApi__WEBPACK_IMPORTED_MODULE_1__.fetchPropertyById)(id);\n            return property;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const getUserInvestments = async ()=>{\n        if (!isAuthenticated || !currentUser) {\n            setError(\"User not authenticated\");\n            throw new Error(\"User not authenticated\");\n        }\n        setLoading(true);\n        setError(null);\n        try {\n            const investments = await (0,_mockApi__WEBPACK_IMPORTED_MODULE_1__.fetchUserInvestments)(currentUser.id);\n            return investments;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const getPlatformStats = async ()=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const stats = await (0,_mockApi__WEBPACK_IMPORTED_MODULE_1__.fetchPlatformStats)();\n            return stats;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const makeInvestment = async (propertyId, amount)=>{\n        if (!isAuthenticated || !currentUser) {\n            setError(\"User not authenticated\");\n            throw new Error(\"User not authenticated\");\n        }\n        setLoading(true);\n        setError(null);\n        try {\n            const investment = await (0,_mockApi__WEBPACK_IMPORTED_MODULE_1__.createInvestment)(currentUser.id, propertyId, amount);\n            return investment;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const getProjectedReturns = async function(propertyId, amount) {\n        let years = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 10;\n        setLoading(true);\n        setError(null);\n        try {\n            const projections = await (0,_mockApi__WEBPACK_IMPORTED_MODULE_1__.calculateProjectedReturns)(propertyId, amount, years);\n            return projections;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally{\n            setLoading(false);\n        }\n    };\n    return {\n        isAuthenticated,\n        currentUser,\n        loading,\n        error,\n        login,\n        register,\n        logout,\n        getProperties,\n        getPropertyById,\n        getUserInvestments,\n        getPlatformStats,\n        makeInvestment,\n        getProjectedReturns\n    };\n};\n_s(useMockApi, \"Knv7Zlm8D0rgqxZibZde8Mf7Ers=\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (useMockApi);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/useMockApi.tsx\n"));

/***/ })

});